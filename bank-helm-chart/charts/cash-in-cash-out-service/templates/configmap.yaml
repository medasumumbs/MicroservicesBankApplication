apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cash-in-cash-out-service.fullname" . }}
  labels:
    {{- include "cash-in-cash-out-service.labels" . | nindent 4 }}
data:
  application.yml: |
    gatewayHost: gateway-service.{{.Release.Namespace}}.svc.cluster.local
    ribbon:
      enabled: false
    server:
      port: 8095
    spring:
      kafka:
        bootstrap-servers: "http://{{.Release.Name}}-kafka-broker-0.{{.Release.Name}}-kafka-broker-headless.{{.Release.Namespace}}.svc.cluster.local:9092"
        producer:
          bootstrap-servers: "http://{{.Release.Name}}-kafka-broker-0.{{.Release.Name}}-kafka-broker-headless.{{.Release.Namespace}}.svc.cluster.local:9092"
          properties:
            spring:
              json:
                add:
                  type:
                    headers: false
            acks: all
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      cloud:
        loadbalancer:
          enabled: false
          ribbon:
            enabled: false
        config:
          enabled: false
      application:
        name: cashInCashOutService
      rabbitmq:
        host: rabbitmq
        port: 5672
        username: guest
        password: guest
      main:
        allow-bean-definition-overriding:
          true
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri:  http://{{ .Release.Name }}-keycloak.{{ .Release.Namespace }}.svc.cluster.local:8080/realms/master
    management:
      endpoints:
        web:
          exposure:
            include: refresh,busrefresh,busshutdown,health,info
      endpoint:
        health:
          show-details: always
    eureka:
      instance:
        hostname: localhost
        prefer-ip-address: true
      client:
        enabled: false
        serviceUrl:
          defaultZone: http://eureka-service-discovery:8761/eureka/

    logging:
      level:
        org:
          springframework:
            web:
              filter:
                CommonsRequestLoggingFilter: DEBUG