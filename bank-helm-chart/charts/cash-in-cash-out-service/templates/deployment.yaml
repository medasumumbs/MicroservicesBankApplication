apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: cash-in-cash-out-service
    app: cash-in-cash-out-service
  name: cash-in-cash-out-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cash-in-cash-out-service
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: cash-in-cash-out-service
        app: cash-in-cash-out-service
    spec:
      initContainers:
        - name: delay
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              echo "Delay 70 sec"
              sleep 70
              echo "Delay finished, starting deployment"
      containers:
        - env:
            - name: BOOTSTRAP_SERVERS_KAFKA
              value: "http://{{.Release.Name}}-kafka-broker-0.{{.Release.Name}}-kafka-broker-headless.{{.Release.Namespace}}.svc.cluster.local:9092"
            - name: NOTIFICATIONS_SERVICE_PORT
              value: "8081"
            - name: SPRING_CONFIG_LOCATION
              value: file:///app/config/application.yml
          image: "cash-in-cash-out-service:0.0.1-SNAPSHOT"
          imagePullPolicy: IfNotPresent
          name: cash-in-cash-out-service
          ports:
            - containerPort: 8095
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config
              name: config-volume
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8095
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 3
          resources:
            limits:
              memory: "1Gi"
            requests:
              memory: "512Mi"
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "cash-in-cash-out-service.fullname" . }}
      restartPolicy: Always
