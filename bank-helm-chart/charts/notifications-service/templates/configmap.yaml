apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "notifications-service.fullname" . }}
  labels:
    {{- include "notifications-service.labels" . | nindent 4 }}
data:
  application.yml: |
    spring:
      kafka:
        bootstrap-servers: "http://{{.Release.Name}}-kafka-broker-0.{{.Release.Name}}-kafka-broker-headless.{{.Release.Namespace}}.svc.cluster.local:9092"
        consumer:
          group-id: notifications-grp
          auto-offset-reset: earliest
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          properties:
            spring:
              json:
                value:
                  default:
                    type: java.util.LinkedHashMap
                trusted:
                  packages: ru.muravin.*
            acks: 1
        listener:
          ack-mode: MANUAL_IMMEDIATE
      application:
        name: notificationsService
      datasource:
        url: {{ tpl .Values.config.database_url . | quote }}
        username: {{ .Values.config.database_username | quote }}
        password: mysecret
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: true
        database-platform:
          org.hibernate.dialect.PostgreSQLDialect
      liquibase:
        url: {{ tpl .Values.config.database_url . | quote }}
        change-log: classpath:liquibase/db.changelog-master.xml
        parameters:
          app.schema-name: notifications
          file-opener-class: org.springframework.boot.loader.jar.JarFileOpener
        clear-checksums: false
        enabled: true
        user: {{ .Values.config.database_username | quote }}
        password: secret
      cloud:
        config:
          enabled: false
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri:  http://{{ .Release.Name }}-keycloak.{{ .Release.Namespace }}.svc.cluster.local:8080/realms/master
    eureka:
      instance:
        hostname: localhost
        prefer-ip-address: true
      client:
        enabled: false
        serviceUrl:
          defaultZone: http://eureka-service-discovery:8761/eureka/
    server:
      port: 8081

    management:
      endpoints:
        web:
          exposure:
            include: refresh,busrefresh,busshutdown,health,info
      endpoint:
        health:
          show-details: always
