input {
  kafka {
    bootstrap_servers => "myapp.kafka.ru:9092"
    topics => ["logs-topic"]
    group_id => "logstash-group"
    consumer_threads => 1
  }
}

filter {
  grok {
    match => {
          "message" => [
            # Формат с traceId:spanId и service_name
            "%{TIMESTAMP_ISO8601:timestamp} $%{DATA:thread}$ %{LOGLEVEL:level} %{JAVACLASS:logger}(?:$%{NUMBER:line}$)? - %{DATA:traceId}:%{DATA:spanId} $%{DATA:service_name}$ %{GREEDYDATA:message}",

            # Формат без traceId/spanId, но с service_name
            "%{TIMESTAMP_ISO8601:timestamp} $%{DATA:thread}$ %{LOGLEVEL:level} %{JAVACLASS:logger}(?:$%{NUMBER:line}$)? - $%{DATA:service_name}$ %{GREEDYDATA:message}",

            # Формат с двоеточием после дефиса (например, "- :")
            "%{TIMESTAMP_ISO8601:timestamp} $%{DATA:thread}$ %{LOGLEVEL:level} %{JAVACLASS:logger}(?:$%{NUMBER:line}$)? - : %{GREEDYDATA:message}",

            # Упрощённый формат без service_name
            "%{TIMESTAMP_ISO8601:timestamp} $%{DATA:thread}$ %{LOGLEVEL:level} %{JAVACLASS:logger}(?:$%{NUMBER:line}$)? - %{GREEDYDATA:message}"
          ]
        }
    tag_on_failure => [ "_grokparsefailure" ]
  }

  date {
    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}