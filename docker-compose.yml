services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
  notifications-service:
    env_file:
      .env
    build:
      context: ./notificationsService
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      - notifications-db

  notifications-db:
    env_file:
      .env
    image: postgres:16
    container_name: notifications-db
    environment:
      POSTGRES_DB: ${NOTIFICATIONS_SERVICE_DB_NAME}
      POSTGRES_USER: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      POSTGRES_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
    ports:
      - "5433:5432"
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloakContainer
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    #networks:
    #  - general_network
    command: start-dev
    ports:
      - "7980:8080"
  keycloak-init:
    image: curlimages/curl:latest
    container_name: keycloak_init
    depends_on:
      - keycloak
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      until curl -s http://keycloak:7980/realms/master > /dev/null; do echo 'Waiting for Keycloak to start...'; sleep 5; done;
      curl -X POST -H 'Content-Type: application/json' \
        -d '{\"clientId\":\"paymentsService\",\"enabled\":true,\"redirectUris\":[\"http://localhost:3000/*\"]}' \
        http://admin:admin_password@keycloak:7980/admin/realms/master/clients;
      echo 'Client registered successfully.'
      "