services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - general_network

  notifications-db:
    env_file:
      .env
    image: postgres:16
    container_name: notifications-db
    environment:
      POSTGRES_DB: ${NOTIFICATIONS_SERVICE_DB_NAME}
      POSTGRES_USER: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      POSTGRES_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${NOTIFICATIONS_SERVICE_DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - general_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    networks:
      - general_network
    command: start-dev
    ports:
      - "7980:8080"

  config_server:
    hostname: config-server
    env_file:
      .env
    build:
      context: ./config_server
      dockerfile: Dockerfile
    ports:
      - "${CONFIG_PORT}:${CONFIG_PORT}"
    environment:
      CONFIG_SERVER_PORT: ${CONFIG_PORT}
    networks:
      - general_network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:${CONFIG_PORT}/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-service-discovery:
    build:
      context: ./eureka_service_discovery
      dockerfile: Dockerfile
    ports:
      - "${EUREKA_PORT}:${EUREKA_PORT}"
    environment:
      EUREKA_PORT: ${EUREKA_PORT}
    depends_on:
      config_server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:${EUREKA_PORT}/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - general_network


  notifications-service:
    env_file:
      .env
    build:
      context: ./notifications_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8081:8081"
    depends_on:
      notifications-db:
          condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network

  accounts-service:
    env_file:
      .env
    build:
      context: ./accounts_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8084:8084"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network

  transfer-service:
    env_file:
      .env
    build:
      context: ./transfer_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8100:8100"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network

  cash_in_cash_out-service:
    env_file:
      .env
    build:
      context: ./cash_in_cash_out_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8095:8095"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network

  ui-service:
    env_file:
      .env
    build:
      context: ./ui_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8087:8087"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network


  exchange-generation-service:
    env_file:
      .env
    build:
      context: ./exchange_generator_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8092:8092"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network


  exchange-service:
    env_file:
      .env
    build:
      context: ./currency_exchange_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8093:8093"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network

  gateway-service:
    env_file:
      .env
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network
  antifraud-service:
    env_file:
      .env
    build:
      context: ./antifraud_service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/${NOTIFICATIONS_SERVICE_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATIONS_SERVICE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATIONS_SERVICE_DB_PASSWORD}
      NOTIFICATIONS_SERVICE_PORT: 8081
      EUREKA_PORT: ${EUREKA_PORT}
    ports:
      - "8096:8096"
    depends_on:
      notifications-db:
        condition: service_healthy
      config_server:
        condition: service_healthy
      eureka-service-discovery:
        condition: service_healthy
    networks:
      - general_network
networks:
  general_network:
#  keycloak-init:
#    image: curlimages/curl:latest
#    container_name: keycloak_init
#    depends_on:
#      - keycloak
#    entrypoint: [ "/bin/sh", "-c" ]
#    command: >
#      "
#      until curl -s http://keycloak:7980/realms/master > /dev/null; do echo 'Waiting for Keycloak to start...'; sleep 5; done;
#      curl -X POST -H 'Content-Type: application/json' \
#        -d '{\"clientId\":\"paymentsService\",\"enabled\":true,\"redirectUris\":[\"http://localhost:3000/*\"]}' \
#        http://admin:admin_password@keycloak:7980/admin/realms/master/clients;
#      echo 'Client registered successfully.'
#      "