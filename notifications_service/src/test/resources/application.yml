spring:
  main:
    allow-bean-definition-overriding:
      true
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS_KAFKA:localhost:9092}
    consumer:
      group-id: currency-rates-grp
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        acks: all
    listener:
      ack-mode: MANUAL_IMMEDIATE
  security:
    #oauth2:
      #resourceserver:
        #jwt:
        #  issuer-uri: http://test-issuer.local
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration
  application:
    name: notificationsService
  datasource:
    url: jdbc:h2:mem:testdb
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  liquibase:
    url: jdbc:h2:mem:testdb
  cloud:
    config:
      enabled: false
eureka:
  client:
    enabled: false
server:
  port: 8081
text-to-print: "Текст до изменений" # Property в микросервисе, которое мы будем изменять прямо на лету

management:
  endpoints:
    web:
      exposure:
        include: refresh,busrefresh,busshutdown,health,info
